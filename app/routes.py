import os
from flask import Blueprint, render_template, request, jsonify
from app.handler.dataset_handler import display_dataset
from app.handler.upload_handler import upload_file
from app.handler.classify_handler import import_dataset, preprocess_dataset,train_model, load_pretrained_model, predict_labels, evaluate_model, visualizePlot, visualizeMonitoring, visualizeLoss, visualizeTimeSeries

bp = Blueprint('routes', __name__)

@bp.route('/')
def index():
    filepath = "data/data.csv"
    message = request.args.get('message')

    if (message == 'File uploaded successfully'):
        df = display_dataset(filepath)
        return render_template('index.html', df=df.to_html(classes="dataset"), message=message)
    return render_template('index.html', message=message)

@bp.route('/upload-dataset', methods=['POST'])
def upload():
    return upload_file()

@bp.route('/classify', methods=['POST'])
def classify():
    filepath = "data/data.csv"
    df = import_dataset(filepath)
    df = preprocess_dataset(df)

    # Pisahkan fitur dan label
    X = df[['orig_pkts', 'orig_ip_bytes', 'time_diff', 'proto_encoded',
       'conn_state_encoded']].values
    Y = df['label'].values

    print(X.shape, Y.shape)


    # training model
    model_path = 'best_model1.h5'
    X_train, X_test, Y_train, Y_test, history = train_model(X, Y, model_path)
    visualizePlot(df)

    # Load model yang sudah dilatih
    model = load_pretrained_model(model_path)
    visualizeMonitoring(model, X_train, X_test, Y_train, Y_test, history)
    visualizeLoss(history)

    # Lakukan prediksi label
    Y_pred_classes = predict_labels(model, X_test, Y_test)

    # Evaluasi model
    accuracy, recall, precision, f1score = evaluate_model(Y_test, Y_pred_classes)
    visualizeTimeSeries(df)

    # Kembalikan hasil evaluasi
    results = {
        'accuracy': accuracy,
        'recall': recall,
        'precision': precision,
        'f1score': f1score,
    }
    try:
        os.remove('best_model1.h5')
        print("File 'best_model1.h5' berhasil dihapus.")
    except FileNotFoundError:
        print("File 'best_model1.h5' tidak ditemukan.")
    except Exception as e:
        print(f"Terjadi kesalahan saat menghapus file: {e}")

    return jsonify(results)